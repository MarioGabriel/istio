{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "grafana-7f4d444dd5-",
                "labels": {
                    "app": "grafana",
                    "chart": "grafana",
                    "heritage": "Tiller",
                    "pod-template-hash": "7f4d444dd5",
                    "release": "istio"
                },
                "name": "grafana-7f4d444dd5-nq52s",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "grafana-7f4d444dd5",
                        "uid": "676b8ac2-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10502",
                "selfLink": "/api/v1/namespaces/istio-system/pods/grafana-7f4d444dd5-nq52s",
                "uid": "67925cbc-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "GRAFANA_PORT",
                                "value": "3000"
                            },
                            {
                                "name": "GF_AUTH_BASIC_ENABLED",
                                "value": "false"
                            },
                            {
                                "name": "GF_AUTH_ANONYMOUS_ENABLED",
                                "value": "true"
                            },
                            {
                                "name": "GF_AUTH_ANONYMOUS_ORG_ROLE",
                                "value": "Admin"
                            },
                            {
                                "name": "GF_PATHS_DATA",
                                "value": "/data/grafana"
                            }
                        ],
                        "image": "grafana/grafana:6.0.2",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "grafana",
                        "ports": [
                            {
                                "containerPort": 3000,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/login",
                                "port": 3000,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/data/grafana",
                                "name": "data"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/galley-dashboard.json",
                                "name": "dashboards-istio-galley-dashboard",
                                "readOnly": true,
                                "subPath": "galley-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-mesh-dashboard.json",
                                "name": "dashboards-istio-istio-mesh-dashboard",
                                "readOnly": true,
                                "subPath": "istio-mesh-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-performance-dashboard.json",
                                "name": "dashboards-istio-istio-performance-dashboard",
                                "readOnly": true,
                                "subPath": "istio-performance-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-service-dashboard.json",
                                "name": "dashboards-istio-istio-service-dashboard",
                                "readOnly": true,
                                "subPath": "istio-service-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/istio-workload-dashboard.json",
                                "name": "dashboards-istio-istio-workload-dashboard",
                                "readOnly": true,
                                "subPath": "istio-workload-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/mixer-dashboard.json",
                                "name": "dashboards-istio-mixer-dashboard",
                                "readOnly": true,
                                "subPath": "mixer-dashboard.json"
                            },
                            {
                                "mountPath": "/var/lib/grafana/dashboards/istio/pilot-dashboard.json",
                                "name": "dashboards-istio-pilot-dashboard",
                                "readOnly": true,
                                "subPath": "pilot-dashboard.json"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/datasources/datasources.yaml",
                                "name": "config",
                                "subPath": "datasources.yaml"
                            },
                            {
                                "mountPath": "/etc/grafana/provisioning/dashboards/dashboardproviders.yaml",
                                "name": "config",
                                "subPath": "dashboardproviders.yaml"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-crnns",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {
                    "fsGroup": 472,
                    "runAsUser": 472
                },
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana"
                        },
                        "name": "config"
                    },
                    {
                        "emptyDir": {},
                        "name": "data"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-galley-dashboard"
                        },
                        "name": "dashboards-istio-galley-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-mesh-dashboard"
                        },
                        "name": "dashboards-istio-istio-mesh-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-performance-dashboard"
                        },
                        "name": "dashboards-istio-istio-performance-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-service-dashboard"
                        },
                        "name": "dashboards-istio-istio-service-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-istio-workload-dashboard"
                        },
                        "name": "dashboards-istio-istio-workload-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-mixer-dashboard"
                        },
                        "name": "dashboards-istio-mixer-dashboard"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-grafana-configuration-dashboards-pilot-dashboard"
                        },
                        "name": "dashboards-istio-pilot-dashboard"
                    },
                    {
                        "name": "default-token-crnns",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-crnns"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:17Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:17Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://89350e2c52f2ba7437fb4ecdfbc8094c67b43ef29e07553cd4f184969fcfef11",
                        "image": "grafana/grafana:6.0.2",
                        "imageID": "docker-pullable://grafana/grafana@sha256:8b48efe9ecb04ba1165531a59ef6c6a9d4f4c299ab621175f7d3c0a8bf1c5bdf",
                        "lastState": {},
                        "name": "grafana",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:11Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.11",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-citadel-7b6cd755d4-",
                "labels": {
                    "app": "security",
                    "chart": "security",
                    "heritage": "Tiller",
                    "istio": "citadel",
                    "pod-template-hash": "7b6cd755d4",
                    "release": "istio"
                },
                "name": "istio-citadel-7b6cd755d4-mnnr9",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-citadel-7b6cd755d4",
                        "uid": "67bc9f1b-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10539",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-citadel-7b6cd755d4-mnnr9",
                "uid": "67f5f42f-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--append-dns-names=true",
                            "--grpc-port=8060",
                            "--grpc-hostname=citadel",
                            "--citadel-storage-namespace=istio-system",
                            "--custom-dns-names=istio-pilot-service-account.istio-system:istio-pilot.istio-system",
                            "--monitoring-port=15014",
                            "--self-signed-ca=true"
                        ],
                        "image": "docker.io/istio/citadel:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/version",
                                "port": 15014,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "citadel",
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-citadel-service-account-token-mswqf",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-citadel-service-account",
                "serviceAccountName": "istio-citadel-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-citadel-service-account-token-mswqf",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-citadel-service-account-token-mswqf"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:25Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://ed6f6abcab79c47fb33d69fd5d2e1d5fee34430d26e30e452b4390d7e342c27f",
                        "image": "istio/citadel:1.1.9",
                        "imageID": "docker-pullable://istio/citadel@sha256:a5fc370a4577ffb6c448d0f0403a370038c052212ee4ec7f0b9f866bb3371235",
                        "lastState": {},
                        "name": "citadel",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:24Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.14",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-galley-548cfdd889-",
                "labels": {
                    "app": "galley",
                    "chart": "galley",
                    "heritage": "Tiller",
                    "istio": "galley",
                    "pod-template-hash": "548cfdd889",
                    "release": "istio"
                },
                "name": "istio-galley-548cfdd889-m79dw",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-galley-548cfdd889",
                        "uid": "675fe364-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10748",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-galley-548cfdd889-m79dw",
                "uid": "67888df5-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/usr/local/bin/galley",
                            "server",
                            "--meshConfigFile=/etc/mesh-config/mesh",
                            "--livenessProbeInterval=1s",
                            "--livenessProbePath=/healthliveness",
                            "--readinessProbePath=/healthready",
                            "--readinessProbeInterval=1s",
                            "--deployment-namespace=istio-system",
                            "--insecure=true",
                            "--validation-webhook-config-file",
                            "/etc/config/validatingwebhookconfiguration.yaml",
                            "--monitoringPort=15014",
                            "--log_output_level=default:info"
                        ],
                        "image": "docker.io/istio/galley:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/galley",
                                    "probe",
                                    "--probe-path=/healthliveness",
                                    "--interval=10s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "galley",
                        "ports": [
                            {
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 9901,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/galley",
                                    "probe",
                                    "--probe-path=/healthready",
                                    "--interval=10s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/config",
                                "name": "config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/mesh-config",
                                "name": "mesh-config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-galley-service-account-token-rq72v",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-galley-service-account",
                "serviceAccountName": "istio-galley-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.istio-galley-service-account"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-galley-configuration"
                        },
                        "name": "config"
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "mesh-config"
                    },
                    {
                        "name": "istio-galley-service-account-token-rq72v",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-galley-service-account-token-rq72v"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:06Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:06Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5c591ae8602f7459bf71e29b5595d93af527e965eddc9063dc71c48c7846b53c",
                        "image": "istio/galley:1.1.9",
                        "imageID": "docker-pullable://istio/galley@sha256:6f6895e118f87c13fb2b6af4e5e54ddb33da22b0574bd192c3bb88b689455e04",
                        "lastState": {},
                        "name": "galley",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:58Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.19",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-ingressgateway-866dd8b8f6-",
                "labels": {
                    "app": "istio-ingressgateway",
                    "chart": "gateways",
                    "heritage": "Tiller",
                    "istio": "ingressgateway",
                    "pod-template-hash": "866dd8b8f6",
                    "release": "istio"
                },
                "name": "istio-ingressgateway-866dd8b8f6-prhfm",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-ingressgateway-866dd8b8f6",
                        "uid": "67707fb3-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10862",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-ingressgateway-866dd8b8f6-prhfm",
                "uid": "6791c6f1-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "proxy",
                            "router",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--log_output_level=default:info",
                            "--drainDuration",
                            "45s",
                            "--parentShutdownDuration",
                            "1m0s",
                            "--connectTimeout",
                            "10s",
                            "--serviceCluster",
                            "istio-ingressgateway",
                            "--zipkinAddress",
                            "zipkin:9411",
                            "--proxyAdminPort",
                            "15000",
                            "--statusPort",
                            "15020",
                            "--controlPlaneAuthPolicy",
                            "NONE",
                            "--discoveryAddress",
                            "istio-pilot:15010"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_CONFIG_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "ISTIO_META_ROUTER_MODE",
                                "value": "sni-dnat"
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 15020,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 31400,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15029,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15030,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15031,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15032,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15443,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 30,
                            "httpGet": {
                                "path": "/healthz/ready",
                                "port": 15020,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 1,
                            "periodSeconds": 2,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-certs",
                                "name": "ingressgateway-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/ingressgateway-ca-certs",
                                "name": "ingressgateway-ca-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-ingressgateway-service-account-token-pf9rn",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-ingressgateway-service-account",
                "serviceAccountName": "istio-ingressgateway-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-ingressgateway-service-account"
                        }
                    },
                    {
                        "name": "ingressgateway-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-certs"
                        }
                    },
                    {
                        "name": "ingressgateway-ca-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio-ingressgateway-ca-certs"
                        }
                    },
                    {
                        "name": "istio-ingressgateway-service-account-token-pf9rn",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-ingressgateway-service-account-token-pf9rn"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:34Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:34Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://2dac0561c41b97185e9a17ab23b7f239e6d698cc9e3196748210a47530fdf57b",
                        "image": "istio/proxyv2:1.1.9",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:53ca4e8b4536895716d23c4f07d447d24677ef7d02c4b0ecade6cafc3300b3c1",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:00Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.10",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:06Z",
                "generateName": "istio-init-crd-10-",
                "labels": {
                    "controller-uid": "5256f394-92a4-11e9-b2ca-42010a8401b0",
                    "job-name": "istio-init-crd-10"
                },
                "name": "istio-init-crd-10-jkcxr",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-init-crd-10",
                        "uid": "5256f394-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "9980",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-init-crd-10-jkcxr",
                "uid": "525d08cd-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kubectl",
                            "apply",
                            "-f",
                            "/etc/istio/crd-10/crd-10.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-init-crd-10",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/crd-10",
                                "name": "crd-10",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-init-service-account-token-r7vlw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-q7cj",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-init-service-account",
                "serviceAccountName": "istio-init-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-crd-10"
                        },
                        "name": "crd-10"
                    },
                    {
                        "name": "istio-init-service-account-token-r7vlw",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-init-service-account-token-r7vlw"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:06Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:23Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:23Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://5bf986d3e052d1096417d90143f7d0339034df768934271a6012fbdc97a2541d",
                        "image": "istio/kubectl:1.1.9",
                        "imageID": "docker-pullable://istio/kubectl@sha256:86d77ae6f69832f982042cde85bf500b2711e38346be7fcf19351a281fc69dd3",
                        "lastState": {},
                        "name": "istio-init-crd-10",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://5bf986d3e052d1096417d90143f7d0339034df768934271a6012fbdc97a2541d",
                                "exitCode": 0,
                                "finishedAt": "2019-06-19T15:10:23Z",
                                "reason": "Completed",
                                "startedAt": "2019-06-19T15:10:21Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.2",
                "phase": "Succeeded",
                "podIP": "10.1.0.8",
                "qosClass": "BestEffort",
                "startTime": "2019-06-19T15:10:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:06Z",
                "generateName": "istio-init-crd-11-",
                "labels": {
                    "controller-uid": "5258853a-92a4-11e9-b2ca-42010a8401b0",
                    "job-name": "istio-init-crd-11"
                },
                "name": "istio-init-crd-11-lsnxf",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "batch/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "Job",
                        "name": "istio-init-crd-11",
                        "uid": "5258853a-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "9824",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-init-crd-11-lsnxf",
                "uid": "525cf1bc-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "containers": [
                    {
                        "command": [
                            "kubectl",
                            "apply",
                            "-f",
                            "/etc/istio/crd-11/crd-11.yaml"
                        ],
                        "image": "docker.io/istio/kubectl:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-init-crd-11",
                        "resources": {},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/crd-11",
                                "name": "crd-11",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-init-service-account-token-r7vlw",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "OnFailure",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-init-service-account",
                "serviceAccountName": "istio-init-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio-crd-11"
                        },
                        "name": "crd-11"
                    },
                    {
                        "name": "istio-init-service-account-token-r7vlw",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-init-service-account-token-r7vlw"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:06Z",
                        "reason": "PodCompleted",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:22Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:22Z",
                        "reason": "PodCompleted",
                        "status": "False",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:06Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://6ed6d4976596965cc33ee54989c49702cfa306e5b8c56479383c647e6bf1ca27",
                        "image": "istio/kubectl:1.1.9",
                        "imageID": "docker-pullable://istio/kubectl@sha256:86d77ae6f69832f982042cde85bf500b2711e38346be7fcf19351a281fc69dd3",
                        "lastState": {},
                        "name": "istio-init-crd-11",
                        "ready": false,
                        "restartCount": 0,
                        "state": {
                            "terminated": {
                                "containerID": "docker://6ed6d4976596965cc33ee54989c49702cfa306e5b8c56479383c647e6bf1ca27",
                                "exitCode": 0,
                                "finishedAt": "2019-06-19T15:10:21Z",
                                "reason": "Completed",
                                "startedAt": "2019-06-19T15:10:20Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Succeeded",
                "podIP": "10.1.1.8",
                "qosClass": "BestEffort",
                "startTime": "2019-06-19T15:10:06Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-pilot-6c9796899d-",
                "labels": {
                    "app": "pilot",
                    "chart": "pilot",
                    "heritage": "Tiller",
                    "istio": "pilot",
                    "pod-template-hash": "6c9796899d",
                    "release": "istio"
                },
                "name": "istio-pilot-6c9796899d-vkwb5",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-pilot-6c9796899d",
                        "uid": "6791a663-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10835",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-pilot-6c9796899d-vkwb5",
                "uid": "67daf512-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "discovery",
                            "--monitoringAddr=:15014",
                            "--log_output_level=default:info",
                            "--domain",
                            "cluster.local",
                            "--secureGrpcAddr",
                            "",
                            "--keepaliveMaxServerConnectionAge",
                            "30m"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "GODEBUG",
                                "value": "gctrace=1"
                            },
                            {
                                "name": "PILOT_PUSH_THROTTLE",
                                "value": "100"
                            },
                            {
                                "name": "PILOT_TRACE_SAMPLING",
                                "value": "1"
                            },
                            {
                                "name": "PILOT_DISABLE_XDS_MARSHALING_TO_ANY",
                                "value": "1"
                            }
                        ],
                        "image": "docker.io/istio/pilot:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "discovery",
                        "ports": [
                            {
                                "containerPort": 8080,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15010,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "timeoutSeconds": 5
                        },
                        "resources": {
                            "requests": {
                                "cpu": "500m",
                                "memory": "2Gi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-pilot-service-account-token-v28qc",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-pilot",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_pilot.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 15003,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15005,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15007,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15011,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-pilot-service-account-token-v28qc",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-pilot-service-account",
                "serviceAccountName": "istio-pilot-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-pilot-service-account"
                        }
                    },
                    {
                        "name": "istio-pilot-service-account-token-v28qc",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-pilot-service-account-token-v28qc"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:27Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:27Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://f0c21ba707294373bc13a927bcd5021d421f785b5a8a143e2bf22bc4613cae15",
                        "image": "istio/pilot:1.1.9",
                        "imageID": "docker-pullable://istio/pilot@sha256:6eacbf258b20d7a03344c4218397766467dce96376679107ad0b24c6737b36a8",
                        "lastState": {},
                        "name": "discovery",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:21Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://77670937a00c4268faa70d1bd2cc251b4aad7ef5920f98582199bfdfc95dda61",
                        "image": "istio/proxyv2:1.1.9",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:53ca4e8b4536895716d23c4f07d447d24677ef7d02c4b0ecade6cafc3300b3c1",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:21Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.13",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-policy-c45dc9d5-",
                "labels": {
                    "app": "policy",
                    "chart": "mixer",
                    "heritage": "Tiller",
                    "istio": "mixer",
                    "istio-mixer-type": "policy",
                    "pod-template-hash": "c45dc9d5",
                    "release": "istio"
                },
                "name": "istio-policy-c45dc9d5-hkt7t",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-policy-c45dc9d5",
                        "uid": "6788d1f0-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10908",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-policy-c45dc9d5-hkt7t",
                "uid": "67ad40f4-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--monitoringPort=15014",
                            "--address",
                            "unix:///sock/mixer.socket",
                            "--log_output_level=default:info",
                            "--configStoreURL=mcp://istio-galley.istio-system.svc:9901",
                            "--configDefaultNamespace=istio-system",
                            "--useAdapterCRDs=true",
                            "--trace_zipkin_url=http://zipkin:9411/api/v1/spans"
                        ],
                        "env": [
                            {
                                "name": "GODEBUG",
                                "value": "gctrace=1"
                            },
                            {
                                "name": "GOMAXPROCS",
                                "value": "6"
                            }
                        ],
                        "image": "docker.io/istio/mixer:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/version",
                                "port": 15014,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "mixer",
                        "ports": [
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 42422,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-p5x5h",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-policy",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_policy.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 9091,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15004,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/istio.io/policy/adapter",
                                "name": "policy-adapter-secret",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-p5x5h",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-mixer-service-account",
                "serviceAccountName": "istio-mixer-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-mixer-service-account"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "uds-socket"
                    },
                    {
                        "name": "policy-adapter-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "policy-adapter-secret"
                        }
                    },
                    {
                        "name": "istio-mixer-service-account-token-p5x5h",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-mixer-service-account-token-p5x5h"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:48Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:48Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://b77c718d862bb81cff4d55dc4342357f4dd28af6ca6cfe6246bfe98b1f1e995d",
                        "image": "istio/proxyv2:1.1.9",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:53ca4e8b4536895716d23c4f07d447d24677ef7d02c4b0ecade6cafc3300b3c1",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:18Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://cfd1c372626308768248e31bfe66da778bd1f7f38929d24df6a131ff19848813",
                        "image": "istio/mixer:1.1.9",
                        "imageID": "docker-pullable://istio/mixer@sha256:a35d94192a1faa8718d54467e5a77c1c7615edb4cf05906f313bfe799c1db50c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://aa463d3b100cd63a4d3c63f79f63d0587c698b5adc115b168b7ce856d91d2327",
                                "exitCode": 2,
                                "finishedAt": "2019-06-19T15:12:18Z",
                                "reason": "Error",
                                "startedAt": "2019-06-19T15:12:03Z"
                            }
                        },
                        "name": "mixer",
                        "ready": true,
                        "restartCount": 4,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:12:48Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.12",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-sidecar-injector-5bbf456587-",
                "labels": {
                    "app": "sidecarInjectorWebhook",
                    "chart": "sidecarInjectorWebhook",
                    "heritage": "Tiller",
                    "istio": "sidecar-injector",
                    "pod-template-hash": "5bbf456587",
                    "release": "istio"
                },
                "name": "istio-sidecar-injector-5bbf456587-lhg5d",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-sidecar-injector-5bbf456587",
                        "uid": "67e7847e-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10769",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-sidecar-injector-5bbf456587-lhg5d",
                "uid": "68001fbc-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--caCertFile=/etc/istio/certs/root-cert.pem",
                            "--tlsCertFile=/etc/istio/certs/cert-chain.pem",
                            "--tlsKeyFile=/etc/istio/certs/key.pem",
                            "--injectConfig=/etc/istio/inject/config",
                            "--meshConfig=/etc/istio/config/mesh",
                            "--healthCheckInterval=2s",
                            "--healthCheckFile=/health"
                        ],
                        "image": "docker.io/istio/sidecar_injector:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/sidecar-injector",
                                    "probe",
                                    "--probe-path=/health",
                                    "--interval=4s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 4,
                            "periodSeconds": 4,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "sidecar-injector-webhook",
                        "readinessProbe": {
                            "exec": {
                                "command": [
                                    "/usr/local/bin/sidecar-injector",
                                    "probe",
                                    "--probe-path=/health",
                                    "--interval=4s"
                                ]
                            },
                            "failureThreshold": 3,
                            "initialDelaySeconds": 4,
                            "periodSeconds": 4,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/istio/config",
                                "name": "config-volume",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/certs",
                                "name": "certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/etc/istio/inject",
                                "name": "inject-config",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-sidecar-injector-service-account-token-mt6mt",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-sidecar-injector-service-account",
                "serviceAccountName": "istio-sidecar-injector-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "istio"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.istio-sidecar-injector-service-account"
                        }
                    },
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "items": [
                                {
                                    "key": "config",
                                    "path": "config"
                                }
                            ],
                            "name": "istio-sidecar-injector"
                        },
                        "name": "inject-config"
                    },
                    {
                        "name": "istio-sidecar-injector-service-account-token-mt6mt",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-sidecar-injector-service-account-token-mt6mt"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:10Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:10Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c3c63738a25ef8049dea8558b8e56a79cadda1f5cf95a126bc9aef27d3b35d79",
                        "image": "istio/sidecar_injector:1.1.9",
                        "imageID": "docker-pullable://istio/sidecar_injector@sha256:63f667eacbc8384b1abaf18096f8de3fbebc84ae9cf411582d293e1507471d6d",
                        "lastState": {},
                        "name": "sidecar-injector-webhook",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:12:04Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.21",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "istio-telemetry-765f6fcb59-",
                "labels": {
                    "app": "telemetry",
                    "chart": "mixer",
                    "heritage": "Tiller",
                    "istio": "mixer",
                    "istio-mixer-type": "telemetry",
                    "pod-template-hash": "765f6fcb59",
                    "release": "istio"
                },
                "name": "istio-telemetry-765f6fcb59-2bh5h",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-telemetry-765f6fcb59",
                        "uid": "6775d804-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10808",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-telemetry-765f6fcb59-2bh5h",
                "uid": "67907c97-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--monitoringPort=15014",
                            "--address",
                            "unix:///sock/mixer.socket",
                            "--log_output_level=default:info",
                            "--configStoreURL=mcp://istio-galley.istio-system.svc:9901",
                            "--configDefaultNamespace=istio-system",
                            "--useAdapterCRDs=true",
                            "--trace_zipkin_url=http://zipkin:9411/api/v1/spans",
                            "--averageLatencyThreshold",
                            "100ms",
                            "--loadsheddingMode",
                            "enforce"
                        ],
                        "env": [
                            {
                                "name": "GODEBUG",
                                "value": "gctrace=1"
                            },
                            {
                                "name": "GOMAXPROCS",
                                "value": "6"
                            }
                        ],
                        "image": "docker.io/istio/mixer:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/version",
                                "port": 15014,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 5,
                            "periodSeconds": 5,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "mixer",
                        "ports": [
                            {
                                "containerPort": 15014,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 42422,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "4800m",
                                "memory": "4G"
                            },
                            "requests": {
                                "cpu": "1",
                                "memory": "1G"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/var/run/secrets/istio.io/telemetry/adapter",
                                "name": "telemetry-adapter-secret",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-p5x5h",
                                "readOnly": true
                            }
                        ]
                    },
                    {
                        "args": [
                            "proxy",
                            "--domain",
                            "$(POD_NAMESPACE).svc.cluster.local",
                            "--serviceCluster",
                            "istio-telemetry",
                            "--templateFile",
                            "/etc/istio/proxy/envoy_telemetry.yaml.tmpl",
                            "--controlPlaneAuthPolicy",
                            "NONE"
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "INSTANCE_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            }
                        ],
                        "image": "docker.io/istio/proxyv2:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "istio-proxy",
                        "ports": [
                            {
                                "containerPort": 9091,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15004,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 15090,
                                "name": "http-envoy-prom",
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "2",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "128Mi"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/certs",
                                "name": "istio-certs",
                                "readOnly": true
                            },
                            {
                                "mountPath": "/sock",
                                "name": "uds-socket"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "istio-mixer-service-account-token-p5x5h",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-q7cj",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "istio-mixer-service-account",
                "serviceAccountName": "istio-mixer-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "istio.istio-mixer-service-account"
                        }
                    },
                    {
                        "emptyDir": {},
                        "name": "uds-socket"
                    },
                    {
                        "name": "telemetry-adapter-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "telemetry-adapter-secret"
                        }
                    },
                    {
                        "name": "istio-mixer-service-account-token-p5x5h",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio-mixer-service-account-token-p5x5h"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:19Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:19Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://c1b1dd8187ed1f3a859db136a96f1629a87a5d5bbac8cd281d9279bb7ca7f56a",
                        "image": "istio/proxyv2:1.1.9",
                        "imageID": "docker-pullable://istio/proxyv2@sha256:53ca4e8b4536895716d23c4f07d447d24677ef7d02c4b0ecade6cafc3300b3c1",
                        "lastState": {},
                        "name": "istio-proxy",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:10:53Z"
                            }
                        }
                    },
                    {
                        "containerID": "docker://a2fad65fb9436a1dfbf790b53b2e1453207263180b736216942aef9f82401920",
                        "image": "istio/mixer:1.1.9",
                        "imageID": "docker-pullable://istio/mixer@sha256:a35d94192a1faa8718d54467e5a77c1c7615edb4cf05906f313bfe799c1db50c",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://96a0670be34f577ae95fe0a03e747a173e5017cb74d80c5eace84d9f298ae165",
                                "exitCode": 2,
                                "finishedAt": "2019-06-19T15:11:52Z",
                                "reason": "Error",
                                "startedAt": "2019-06-19T15:11:37Z"
                            }
                        },
                        "name": "mixer",
                        "ready": true,
                        "restartCount": 4,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:12:19Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.2",
                "phase": "Running",
                "podIP": "10.1.0.10",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/path": "/jaeger/metrics",
                    "prometheus.io/port": "16686",
                    "prometheus.io/scrape": "true",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:43Z",
                "generateName": "istio-tracing-79db5954f-",
                "labels": {
                    "app": "jaeger",
                    "chart": "tracing",
                    "heritage": "Tiller",
                    "pod-template-hash": "79db5954f",
                    "release": "istio"
                },
                "name": "istio-tracing-79db5954f-9zw97",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "istio-tracing-79db5954f",
                        "uid": "682a79ac-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10637",
                "selfLink": "/api/v1/namespaces/istio-system/pods/istio-tracing-79db5954f-9zw97",
                "uid": "68312a44-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "env": [
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "COLLECTOR_ZIPKIN_HTTP_PORT",
                                "value": "9411"
                            },
                            {
                                "name": "MEMORY_MAX_TRACES",
                                "value": "50000"
                            },
                            {
                                "name": "QUERY_BASE_PATH",
                                "value": "/jaeger"
                            }
                        ],
                        "image": "docker.io/jaegertracing/all-in-one:1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 16686,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "jaeger",
                        "ports": [
                            {
                                "containerPort": 9411,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 16686,
                                "protocol": "TCP"
                            },
                            {
                                "containerPort": 5775,
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 6831,
                                "protocol": "UDP"
                            },
                            {
                                "containerPort": 6832,
                                "protocol": "UDP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/",
                                "port": 16686,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-crnns",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-crnns",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-crnns"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:39Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:11:39Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://70cef0e31c849c569af1f674306a255630eed4d423f67b37b4968926ee70ad60",
                        "image": "jaegertracing/all-in-one:1.9",
                        "imageID": "docker-pullable://jaegertracing/all-in-one@sha256:29c921747eddfa96c97cf96aac0180e97bfdfcbea25e230daef09711103d1f61",
                        "lastState": {},
                        "name": "jaeger",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:30Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.17",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:43Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "prometheus.io/port": "9090",
                    "prometheus.io/scrape": "true",
                    "scheduler.alpha.kubernetes.io/critical-pod": "",
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "kiali-68677d47d7-",
                "labels": {
                    "app": "kiali",
                    "chart": "kiali",
                    "heritage": "Tiller",
                    "pod-template-hash": "68677d47d7",
                    "release": "istio"
                },
                "name": "kiali-68677d47d7-nz55r",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "kiali-68677d47d7",
                        "uid": "67628ce7-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10400",
                "selfLink": "/api/v1/namespaces/istio-system/pods/kiali-68677d47d7-nz55r",
                "uid": "678740d1-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "command": [
                            "/opt/kiali/kiali",
                            "-config",
                            "/kiali-configuration/config.yaml",
                            "-v",
                            "4"
                        ],
                        "env": [
                            {
                                "name": "ACTIVE_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "PROMETHEUS_SERVICE_URL",
                                "value": "http://prometheus:9090"
                            },
                            {
                                "name": "SERVER_WEB_ROOT",
                                "value": "/kiali"
                            }
                        ],
                        "image": "docker.io/kiali/kiali:v0.16",
                        "imagePullPolicy": "IfNotPresent",
                        "name": "kiali",
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/kiali-configuration",
                                "name": "kiali-configuration"
                            },
                            {
                                "mountPath": "/kiali-secret",
                                "name": "kiali-secret"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "kiali-service-account-token-hwkq6",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "kiali-service-account",
                "serviceAccountName": "kiali-service-account",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "kiali"
                        },
                        "name": "kiali-configuration"
                    },
                    {
                        "name": "kiali-secret",
                        "secret": {
                            "defaultMode": 420,
                            "optional": true,
                            "secretName": "kiali"
                        }
                    },
                    {
                        "name": "kiali-service-account-token-hwkq6",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "kiali-service-account-token-hwkq6"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:55Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:55Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://990bbbb30e8b6c746c86c396bcd94e2a28d240557584ab6a733989b1c8f19b1e",
                        "image": "kiali/kiali:v0.16",
                        "imageID": "docker-pullable://kiali/kiali@sha256:6b332f75d5d5d5b4cbd3ecb627230aa8394970b13ee35c14b0812fc4eb743342",
                        "lastState": {},
                        "name": "kiali",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:10:55Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.9",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "prometheus-5977597c75-",
                "labels": {
                    "app": "prometheus",
                    "chart": "prometheus",
                    "heritage": "Tiller",
                    "pod-template-hash": "5977597c75",
                    "release": "istio"
                },
                "name": "prometheus-5977597c75-lqqdf",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "prometheus-5977597c75",
                        "uid": "67a65d33-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10757",
                "selfLink": "/api/v1/namespaces/istio-system/pods/prometheus-5977597c75-lqqdf",
                "uid": "67dff259-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--storage.tsdb.retention=6h",
                            "--config.file=/etc/prometheus/prometheus.yml"
                        ],
                        "image": "docker.io/prom/prometheus:v2.3.1",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/-/healthy",
                                "port": 9090,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "prometheus",
                        "ports": [
                            {
                                "containerPort": 9090,
                                "name": "http",
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/-/ready",
                                "port": 9090,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/etc/prometheus",
                                "name": "config-volume"
                            },
                            {
                                "mountPath": "/etc/istio-certs",
                                "name": "istio-certs"
                            },
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "prometheus-token-kzdb8",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "prometheus",
                "serviceAccountName": "prometheus",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "configMap": {
                            "defaultMode": 420,
                            "name": "prometheus"
                        },
                        "name": "config-volume"
                    },
                    {
                        "name": "istio-certs",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "istio.default"
                        }
                    },
                    {
                        "name": "prometheus-token-kzdb8",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "prometheus-token-kzdb8"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:07Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:07Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:42Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://a89c45594cd30b4b85f4e84a20a84602a37c8fdd9c76584808b096de2363f91f",
                        "image": "prom/prometheus:v2.3.1",
                        "imageID": "docker-pullable://prom/prometheus@sha256:0283ae2509e1ccc71830edf382713cc3906aa55ca9418c50911854223829bf0b",
                        "lastState": {},
                        "name": "prometheus",
                        "ready": true,
                        "restartCount": 0,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:12:02Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.20",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:42Z"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "sidecar.istio.io/inject": "false"
                },
                "creationTimestamp": "2019-06-19T15:10:42Z",
                "generateName": "servicegraph-859cc799f4-",
                "labels": {
                    "app": "servicegraph",
                    "chart": "servicegraph",
                    "heritage": "Tiller",
                    "pod-template-hash": "859cc799f4",
                    "release": "istio"
                },
                "name": "servicegraph-859cc799f4-4lngt",
                "namespace": "istio-system",
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "blockOwnerDeletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "servicegraph-859cc799f4",
                        "uid": "67df8747-92a4-11e9-b2ca-42010a8401b0"
                    }
                ],
                "resourceVersion": "10785",
                "selfLink": "/api/v1/namespaces/istio-system/pods/servicegraph-859cc799f4-4lngt",
                "uid": "6806e673-92a4-11e9-b2ca-42010a8401b0"
            },
            "spec": {
                "affinity": {
                    "nodeAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "ppc64le"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            },
                            {
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "s390x"
                                            ]
                                        }
                                    ]
                                },
                                "weight": 2
                            }
                        ],
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "beta.kubernetes.io/arch",
                                            "operator": "In",
                                            "values": [
                                                "amd64",
                                                "ppc64le",
                                                "s390x"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "containers": [
                    {
                        "args": [
                            "--prometheusAddr=http://prometheus:9090"
                        ],
                        "image": "docker.io/istio/servicegraph:1.1.9",
                        "imagePullPolicy": "IfNotPresent",
                        "livenessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/graph",
                                "port": 8088,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "name": "servicegraph",
                        "ports": [
                            {
                                "containerPort": 8088,
                                "protocol": "TCP"
                            }
                        ],
                        "readinessProbe": {
                            "failureThreshold": 3,
                            "httpGet": {
                                "path": "/graph",
                                "port": 8088,
                                "scheme": "HTTP"
                            },
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "timeoutSeconds": 1
                        },
                        "resources": {
                            "requests": {
                                "cpu": "10m"
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "volumeMounts": [
                            {
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "name": "default-token-crnns",
                                "readOnly": true
                            }
                        ]
                    }
                ],
                "dnsPolicy": "ClusterFirst",
                "nodeName": "gke-gke-local-cluster-default-pool-3ec9aa2a-21lz",
                "priority": 0,
                "restartPolicy": "Always",
                "schedulerName": "default-scheduler",
                "securityContext": {},
                "serviceAccount": "default",
                "serviceAccountName": "default",
                "terminationGracePeriodSeconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "tolerationSeconds": 300
                    }
                ],
                "volumes": [
                    {
                        "name": "default-token-crnns",
                        "secret": {
                            "defaultMode": 420,
                            "secretName": "default-token-crnns"
                        }
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:14Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:12:14Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2019-06-19T15:10:43Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "docker://36dd3cd33f2c74063150b553aec29a7d5d2e265f654c5e18ae4ea5bf5194a175",
                        "image": "istio/servicegraph:1.1.9",
                        "imageID": "docker-pullable://istio/servicegraph@sha256:46c6e7c285ee04355baa9cbbd63f074e86be70c44951ccce31866f12f42fd3ee",
                        "lastState": {
                            "terminated": {
                                "containerID": "docker://873bc55d48e39e14501b8ad1bb1d4a333c89d4ccea08626b703f4b26fbd9495f",
                                "exitCode": 2,
                                "finishedAt": "2019-06-19T15:11:56Z",
                                "reason": "Error",
                                "startedAt": "2019-06-19T15:11:27Z"
                            }
                        },
                        "name": "servicegraph",
                        "ready": true,
                        "restartCount": 1,
                        "state": {
                            "running": {
                                "startedAt": "2019-06-19T15:11:56Z"
                            }
                        }
                    }
                ],
                "hostIP": "10.0.0.3",
                "phase": "Running",
                "podIP": "10.1.1.15",
                "qosClass": "Burstable",
                "startTime": "2019-06-19T15:10:43Z"
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
